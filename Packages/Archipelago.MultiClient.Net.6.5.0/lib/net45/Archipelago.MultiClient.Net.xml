<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Archipelago.MultiClient.Net</name>
    </assembly>
    <members>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoPacketBase.ToJObject">
            <summary>
            Retrieve the basic jobject that was send by the server.
            Its not recommended to use this however the JObject allows accessing properties are not available in the library
            </summary>
            <returns></returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.IArchipelagoSession">
            <summary>
            `ArchipelagoSession` is the overarching class to access and modify and respond to the multiworld state
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.Socket">
            <summary>
            Provides access to the underlying websocket, so send or receive messages
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.Items">
            <summary>
            Provides simplified methods to receive items
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.Locations">
            <summary>
            Provides way to mark locations as checked
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.Players">
            <summary>
            Provides information about all players in the multiworld
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.DataStorage">
            <summary>
            Provides access to a server side data storage to share and store values across sessions and players
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.ConnectionInfo">
            <summary>
            Provides information about your current connection
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.RoomState">
            <summary>
            Provides information about the current state of the server
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.IArchipelagoSession.MessageLog">
            <summary>
            Provides simplified handlers to receive messages about events that happen in the multiworld
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSession.ConnectAsync">
            <summary>
            Connect the websocket to the server
            Will wait a few seconds to retrieve the RoomInfoPacket, if the request timesout the task will be canceled
            </summary>
            <returns>The roominfo send from the server</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSession.LoginAsync(System.String,System.String,Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags,System.Version,System.String[],System.String,System.String,System.Boolean)">
            <summary>
                Attempt to log in to the Archipelago server by opening a websocket connection and sending a Connect packet.
                Determining success for this attempt is done by attaching a listener to Socket.PacketReceived and listening for a Connected packet.
            </summary>
            <param name="game">The game this client is playing.</param>
            <param name="name">The slot name of this client.</param>
            <param name="version">The minimum AP protocol version this client supports.</param>
            <param name="itemsHandlingFlags">Informs the AP server how you want ReceivedItem packets to be sent to you.</param>
            <param name="tags">The tags this client supports.</param>
            <param name="uuid">The uuid of this client.</param>
            <param name="password">The password to connect to this AP room.</param>
            <param name="requestSlotData">Decides if the <see cref="T:Archipelago.MultiClient.Net.LoginSuccessful"/> result will contain any slot data</param>
            <returns>
                <see cref="T:Archipelago.MultiClient.Net.LoginSuccessful"/> if the connection is succeeded and the server accepted the login attempt.
                <see cref="T:Archipelago.MultiClient.Net.LoginFailure"/> if the connection to the server failed in some way.
            </returns>
            <remarks>
                The connect attempt is synchronous and will lock for up to 5 seconds as it attempts to connect to the server. 
                Most connections are instantaneous however the timeout is 5 seconds before it returns <see cref="T:Archipelago.MultiClient.Net.LoginFailure"/>.
            </remarks>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSession.TryConnectAndLogin(System.String,System.String,Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags,System.Version,System.String[],System.String,System.String,System.Boolean)">
            <summary>
                Attempt to log in to the Archipelago server by opening a websocket connection and sending a Connect packet.
                Determining success for this attempt is done by attaching a listener to Socket.PacketReceived and listening for a Connected packet.
            </summary>
            <param name="game">The game this client is playing.</param>
            <param name="name">The slot name of this client.</param>
            <param name="version">The minimum AP protocol version this client supports.</param>
            <param name="itemsHandlingFlags">Informs the AP server how you want ReceivedItem packets to be sent to you.</param>
            <param name="tags">The tags this client supports.</param>
            <param name="uuid">The uuid of this client.</param>
            <param name="password">The password to connect to this AP room.</param>
            <param name="requestSlotData">Decides if the <see cref="T:Archipelago.MultiClient.Net.LoginSuccessful"/> result will contain any slot data</param>
            <returns>
                <see cref="T:Archipelago.MultiClient.Net.LoginSuccessful"/> if the connection is succeeded and the server accepted the login attempt.
                <see cref="T:Archipelago.MultiClient.Net.LoginFailure"/> if the connection to the server failed in some way.
            </returns>
            <remarks>
                The connect attempt is synchronous and will lock for up to 5 seconds as it attempts to connect to the server. 
                Most connections are instantaneous however the timeout is 5 seconds before it returns <see cref="T:Archipelago.MultiClient.Net.LoginFailure"/>.
            </remarks>
        </member>
        <member name="T:Archipelago.MultiClient.Net.ArchipelagoSession">
            <summary>
            `ArchipelagoSession` is the overarching class to access and modify and respond to the multiworld state
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.Socket">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.Items">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.Locations">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.Players">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.DataStorage">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.ConnectionInfo">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.RoomState">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.ArchipelagoSession.MessageLog">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.ConnectAsync">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.LoginAsync(System.String,System.String,Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags,System.Version,System.String[],System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.TryConnectAndLogin(System.String,System.String,Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags,System.Version,System.String[],System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.Say(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.SetClientState(Archipelago.MultiClient.Net.Enums.ArchipelagoClientState)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSession.SetGoalAchieved">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.IArchipelagoSessionActions">
            <summary>
            Actions that can be performed in the context of an session
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSessionActions.Say(System.String)">
            <summary>
            Send a message on behalf of the current player
            Can also be used to send commands like !hint item
            </summary>
            <param name="message">The message that will be broadcasted to the server and all clients</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSessionActions.SetClientState(Archipelago.MultiClient.Net.Enums.ArchipelagoClientState)">
            <summary>
            Updates the status of the current player
            </summary>
            <param name="state">the state to send to the server</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.IArchipelagoSessionActions.SetGoalAchieved">
            <summary>
            Informs the server that the current player has reached their goal
            This cannot be reverted
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.ArchipelagoSessionFactory">
            <summary>
            Factory to initiate a new ArchipelagoSession, the base object to communicate with an Archipelago Server
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSessionFactory.CreateSession(System.Uri)">
            <summary>
                Creates an <see cref="T:Archipelago.MultiClient.Net.ArchipelagoSession"/> object which facilitates all communication to the Archipelago server.
            </summary>
            <param name="uri">
                The full URI to the Archipelago server, including scheme, hostname, and port.
            </param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.ArchipelagoSessionFactory.CreateSession(System.String,System.Int32)">
            <summary>
                Creates an <see cref="T:Archipelago.MultiClient.Net.ArchipelagoSession"/> object which facilitates all communication to the Archipelago server.            
            </summary>
            <param name="hostname">
                The hostname of the Archipelago server, can include protocol and port.
            		Ex: `archipelago.gg`, `localhost`, `localhost:38281` or `ws://archipelago.gg:46376`
            </param>
            <param name="port">
                (Optional) The port number which the Archipelago server is hosted on. Defaults to: 38281,
            		will be ignored if the port is added to the hostname
            </param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink">
            <summary>
            A DeathLink object that gets sent and received via bounce packets.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Timestamp">
            <summary>
            The Timestamp of the created DeathLink object
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Source">
            <summary>
            The name of the player who sent the DeathLink
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Cause">
            <summary>
            The full text to print for players receiving the DeathLink. Can be null
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.#ctor(System.String,System.String)">
            <summary>
            A DeathLink object that gets sent and received via bounce packets.
            </summary>
            <param name="sourcePlayer">Name of the player sending the DeathLink</param>
            <param name="cause">Optional reason for the DeathLink. Since this is optional it should generally include
            a name as if this entire text is what will be displayed</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Equals(Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkProvider.CreateDeathLinkService(Archipelago.MultiClient.Net.ArchipelagoSession)">
            <summary>
                creates and returns a <see cref="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService"/> for this <paramref name="session"/>.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.DeathLinkReceivedHandler">
            <summary>
            Creates <see cref="E:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.OnDeathLinkReceived"/> event for clients to hook into and decide what to do with the
            received <see cref="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink"/>
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.OnDeathLinkReceived">
            <summary>
            Delegate event that supplies the created <see cref="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink"/> whenever one is received from the server
            as a bounce packet.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.SendDeathLink(Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink)">
            <summary>
                Formats and sends a Bounce packet using the provided <paramref name="deathLink"/> object.
            </summary>
            <param name="deathLink">
                <see cref="T:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink"/> object containing the information of the death which occurred.
                Must at least contain the <see cref="P:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLink.Source"/>.
            </param>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.EnableDeathLink">
            <summary>
            Adds "DeathLink" to your <see cref="T:Archipelago.MultiClient.Net.ArchipelagoSession"/>'s tags and opts you in to receiving
            <see cref="E:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.OnDeathLinkReceived"/> events
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.DisableDeathLink">
            <summary>
            Removes the "DeathLink" tag from your <see cref="T:Archipelago.MultiClient.Net.ArchipelagoSession"/> and opts out of further
            <see cref="E:Archipelago.MultiClient.Net.BounceFeatures.DeathLink.DeathLinkService.OnDeathLinkReceived"/> events
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Converters.ArchipelagoPacketConverter">
            <summary>
            Json Converter for archipelago packets
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Converters.ArchipelagoPacketConverter.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Converters.ArchipelagoPacketConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Converters.ArchipelagoPacketConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Converters.ArchipelagoPacketConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Converters.UnixTimeConverter">
            <summary>
            Provides methods to convert between Unix timestamps and DateTime objects.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Converters.UnixTimeConverter.UnixTimeStampToDateTime(System.Double)">
            <summary>
            Converts a Unix timestamp to a DateTime object.
            </summary>
            <param name="unixTimeStamp">a unix timestamp either in 64bit format or 32bit format</param>
            <returns></returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Converters.UnixTimeConverter.ToUnixTimeStamp(System.DateTime)">
            <summary>
            Converts a DateTime object to a Unix timestamp.
            </summary>
            <param name="dateTime">a datetime timestamp</param>
            <returns></returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver">
            <summary>
            Provides methods to resolve item additional information based on ideez
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver.GetItemName(System.Int64,System.String)">
            <summary>
                Perform a lookup using the DataPackage sent as a source of truth to lookup a particular item id for a particular game.
            </summary>
            <param name="itemId">
                Id of the item to lookup.
            </param>
            <param name="game">
                The game to lookup the item id for, if null will look in the game the local player is connected to.
            	Negative item ids are always looked up under the Archipelago game
            </param>
            <returns>
                The name of the item as a string, or null if no such item is found.
            </returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver.GetLocationName(System.Int64,System.String)">
            <summary>
                Get the name of a location from its id. Useful when receiving a packet and it is necessary to find the name of the location.
            </summary>
            <param name="locationId">
                The Id of the location to look up the name for. Must match the contents of the datapackage.
            </param>
            <param name="game">
                The game to lookup the location id for, if null will look in the game the local player is connected to.
            	Negative location ids are always looked up under the Archipelago game
            </param>
            <returns>
                Returns the locationName for the provided locationId, or null if no such location is found.
            </returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver.GetLocationId(System.String,System.String)">
            <summary>
                Get the Id of a location from its name. Useful when a game knows its locations by name but not by Archipelago Id.
            </summary>
            <param name="game">
                The game to look up the locations from
            </param>
            <param name="locationName">
                The name of the location to check the Id for. Must match the contents of the datapackage.
            </param>
            <returns>
                Returns the locationId for the location name that was given or -1 if no location was found.
            </returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.DataPackage.ItemInfoResolver">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.ItemInfoResolver.GetItemName(System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.ItemInfoResolver.GetLocationName(System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.DataPackage.ItemInfoResolver.GetLocationId(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState">
            <summary>
            The state of a player
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState.ClientUnknown">
            <summary>
            Default value, no state is known for this player
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState.ClientConnected">
            <summary>
            The player is connected to the multiworld
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState.ClientReady">
            <summary>
            The player is ready to start playing
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState.ClientPlaying">
            <summary>
            The player started playing
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ArchipelagoClientState.ClientGoal">
            <summary>
            The player has finished their goal
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError">
            <summary>
            The possible reasons for a connection to be refused.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.InvalidSlot">
            <summary>
            Indicates that the sent 'name' field did not match any auth entry on the server.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.InvalidGame">
            <summary>
            Indicates that a correctly named slot was found, but the game for it mismatched.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.SlotAlreadyTaken">
            <summary>
            Indicates a connection with a different uuid is already established.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.IncompatibleVersion">
            <summary>
            IncompatibleVersion indicates a version mismatch.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.InvalidPassword">
            <summary>
            InvalidPassword indicates the wrong, or no password when it was required, was sent.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ConnectionRefusedError.InvalidItemsHandling">
            <summary>
            InvalidItemsHandling indicates a wrong value type or flag combination was sent.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.Scope">
            <summary>
            Scope for DataStorage keys
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Scope.Global">
            <summary>
            Keys in this scope are shared with all clients
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Scope.Game">
            <summary>
            Keys in this scope are with shared with clients that connect under the same game as you connected with
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Scope.Team">
            <summary>
            Keys in this scope are with shared with clients on your team
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Scope.Slot">
            <summary>
            Keys in this scope are with shared with clients connected to your slot
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Scope.ReadOnly">
            <summary>
            Keys in this scope are read-only and can only be updated by the server
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.HintCreationPolicy">
            <summary>
            Specifies if a location scout should create an actual hint on the AP server
            Hints created using location scouts never cost hintpoints
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintCreationPolicy.None">
            <summary>
            Do not create a hint
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintCreationPolicy.CreateAndAnnounce">
            <summary>
            Create a hint and announce it player that the item belongs to
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintCreationPolicy.CreateAndAnnounceOnce">
            <summary>
            Create a hint and announce it player that the item belongs to but only once announce if the hint didnt exist yet
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.HintStatus">
            <summary>
            The state of a player
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintStatus.Found">
            <summary>
            The location has been collected. Status cannot be changed once found.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintStatus.Unspecified">
            <summary>
            The receiving player has not specified any status
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintStatus.NoPriority">
            <summary>
            The receiving player has specified that the item is unneeded
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintStatus.Avoid">
            <summary>
            The receiving player has specified that the item is detrimental
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.HintStatus.Priority">
            <summary>
            The receiving player has specified that the item is needed
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.InvalidPacketErrorType">
            <summary>
            Types of errors that can be returned by the server if your packet gets rejected
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.InvalidPacketErrorType.Cmd">
            <summary>
            The command in your packet was invalid
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.InvalidPacketErrorType.Arguments">
            <summary>
            Some of the arguments in your packet were invalid
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.ItemFlags">
            <summary>
            Enum flags that describe special properties of the Item
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemFlags.None">
            <summary>
            Nothing special about this item
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemFlags.Advancement">
            <summary>
            Indicates the item can unlock logical advancement
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemFlags.NeverExclude">
            <summary>
            Indicates the item is important but not in a way that unlocks advancement
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemFlags.Trap">
            <summary>
            Indicates the item is a trap
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags">
            <summary>
            Indicates to the server how the client would like to get ReceivedItems packets.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags.NoItems">
            <summary>
            Don't get any ReceivedItems packets from the server.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags.RemoteItems">
            <summary>
            Get ReceivedItems packets for items being granted to you by others.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags.IncludeOwnItems">
            <summary>
            Get ReceivedItems packets for items which you picked up in your own world. Automatically includes RemoteItems option as it is required to set this.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags.IncludeStartingInventory">
            <summary>
            Get ReceivedItems packets for your starting inventory. Automatically includes RemoteItems option as it is required to set this.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags.AllItems">
            <summary>
            Get ReceivedItems packets for all remote items, items in your world, and starting inventory granted to you.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor">
            <summary>
            Specified colors for printed messages
            This color should be used if specified
            colors suffixed in Bg should be applied to the background
            There colors are based of standard terminal colors
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Bold">
            <summary>
            Message should be bold
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Underline">
            <summary>
            Message should be underlined
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Black">
            <summary>
            Message should be colored black
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Red">
            <summary>
            Message should be colored red
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Green">
            <summary>
            Message should be colored green
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Yellow">
            <summary>
            Message should be colored yellow
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Blue">
            <summary>
            Message should be colored blue
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Magenta">
            <summary>
            Message should be colored magenta
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.Cyan">
            <summary>
            Message should be colored cyan
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.White">
            <summary>
            Message should be colored white
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.BlackBg">
            <summary>
            Message should have a black background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.RedBg">
            <summary>
            Message should have a red background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.GreenBg">
            <summary>
            Message should have a green background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.YellowBg">
            <summary>
            Message should have a yellow background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.BlueBg">
            <summary>
            Message should have a blue background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.MagentaBg">
            <summary>
            Message should have a magenta background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.CyanBg">
            <summary>
            Message should have a cyan background
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartColor.WhiteBg">
            <summary>
            Message should have a white background
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.JsonMessagePartType">
            <summary>
            Type of message parts of an print message
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.Text">
            <summary>
            Regular text content. this is the default type and as such may be omitted.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.PlayerId">
            <summary>
            Player ID of someone on your team, should be resolved to Player Name
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.PlayerName">
            <summary>
            Player Name, could be a player within a multiplayer game or from another team, not ID resolvable
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.ItemId">
            <summary>
            Item ID, should be resolved to Item Name
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.ItemName">
            <summary>
            Item Name, not currently used over network, but supported by reference Clients.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.LocationId">
            <summary>
            Location ID, should be resolved to Location Name
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.LocationName">
            <summary>
            Location Name, not currently used over network, but supported by reference Clients.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.EntranceName">
            <summary>
            Entrance Name. No ID mapping exists.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.Color">
            <summary>
            Regular text that should be colored. Only type that will contain color data.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.JsonMessagePartType.HintStatus">
            <summary>
            The HintStatus of the hint
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.OperationType">
            <summary>
            The type of DataStorage operation
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.Permissions">
            <summary>
            Enum flags that describe the permissions of the currently connected player
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Permissions.Disabled">
            <summary>
            Permission is not granted
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Permissions.Enabled">
            <summary>
            Permission is granted to manually execute this
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Permissions.Goal">
            <summary>
            Permission is granted to manually execute this after your goal is completed
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Permissions.Auto">
            <summary>
            Will automaticly execute this after your goal is completed, No permission is not granted for manually executing this
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.Permissions.AutoEnabled">
            <summary>
            Will automaticly execute this after your goal is completed, Permission is granted to manually execute this
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Enums.SlotType">
            <summary>
            The types of slots that can be present in a game.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.SlotType.Spectator">
            <summary>
            A spectator slot. (wont be allowed to send hints or items)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.SlotType.Player">
            <summary>
            A normal player slot
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Enums.SlotType.Group">
            <summary>
            A slot that represents a group of players, used for itemlinks
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelper.Uri">
            <summary>
                The URL of the host that the socket is connected to.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelper.ConnectAsync">
            <summary>
                Initiates a connection to the host asynchronously.
                Handle the <see cref="!:SocketOpened"/> event to add a callback.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1">
            <summary>
            Websocket agnostic version of the Socket helper, allows a different socket class to be used for testing
            </summary>
            <typeparam name="T">The type of WebSocket to use</typeparam>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.PacketReceived">
            <summary>
            Handler for recieved and sucsesfully parsed packages
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.PacketsSent">
            <summary>
            Handler for packets published to the websocket, called before the packet is handled by the server
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.ErrorReceived">
            <summary>
            Handler for error on the socket or during parsing of the packets
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SocketClosed">
            <summary>
            Handler for when the underlaying socket connection is closed
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SocketOpened">
            <summary>
            Handler for when the underlaying socket connection is opened to the archipelago server
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.Connected">
            <summary>
                Returns true if the socket believes it is connected to the host.
                Does not emit a ping to determine if the connection is stable.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.DisconnectAsync">
            <summary>
                Disconnect from the host asynchronously.
                Handle the <see cref="E:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SocketClosed"/> event to add a callback.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendPacket(Archipelago.MultiClient.Net.ArchipelagoPacketBase)">
            <summary>
                Send a single <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packet.
            </summary>
            <param name="packet">
                The packet to send to the server.
            </param>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendMultiplePackets(System.Collections.Generic.List{Archipelago.MultiClient.Net.ArchipelagoPacketBase})">
            <summary>
                Send multiple <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packets.
            </summary>
            <param name="packets">
                The packets to send to the server.
            </param>
            <remarks>
                The packets will be sent in the order they are provided in the list.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendMultiplePackets(Archipelago.MultiClient.Net.ArchipelagoPacketBase[])">
            <summary>
                Send multiple <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packets.
            </summary>
            <param name="packets">
                The packets to send to the server.
            </param>
            <remarks>
                The packets will be sent in the order they are provided as arguments.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendPacketAsync(Archipelago.MultiClient.Net.ArchipelagoPacketBase)">
            <summary>
                Send a single <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packet asynchronously.
            </summary>
            <param name="packet">
                The packet to send to the server.
            </param>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendMultiplePacketsAsync(System.Collections.Generic.List{Archipelago.MultiClient.Net.ArchipelagoPacketBase})">
            <summary>
                Send a single <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packet asynchronously.
            </summary>
            <param name="packets">
                The packets to send to the server.
            </param>
            <remarks>
                The packets will be sent in the order they are provided in the list.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.SendMultiplePacketsAsync(Archipelago.MultiClient.Net.ArchipelagoPacketBase[])">
            <summary>
                Send a single <see cref="T:Archipelago.MultiClient.Net.ArchipelagoPacketBase"/> derived packet asynchronously.
            </summary>
            <param name="packets">
                The packets to send to the server.
            </param>
            <remarks>
                The packets will be sent in the order they are provided as arguments.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.BaseArchipelagoSocketHelper`1.OnError(System.Exception)">
            <summary>
            Error handler to call when an exception occurs, it will trigger the socket's ErrorRecieved handler
            </summary>
            <param name="e">the exception that occured</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider">
            <summary>
            Provides information about your current connection
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.Game">
            <summary>
            The game you are connected to or an empty string otherwise
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.Team">
            <summary>
            The team you are connected to or -1 otherwise
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.Slot">
            <summary>
            The slot you are connected to or -1 otherwise
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.Tags">
            <summary>
            The tags under which you client is connected or an empty array otherwise
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.ItemsHandlingFlags">
            <summary>
            The Item Handling Flags which your connection is currently using, defaults to NoItems
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.Uuid">
            <summary>
            The Uniquely Identifiable string under which you client is connected or an empty string otherwise
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.UpdateConnectionOptions(System.String[])">
            <summary>
            Send a ConnectUpdate packet and set the tags and ItemsHandlingFlags for the current connection to the provided params.
            </summary>
            <param name="tags">New tags for the current connection.</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.UpdateConnectionOptions(Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags)">
            <summary>
            Send a ConnectUpdate packet and set the tags and ItemsHandlingFlags for the current connection to the provided params.
            </summary>
            <param name="itemsHandlingFlags">New ItemsHandlingFlags for the current connection.</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IConnectionInfoProvider.UpdateConnectionOptions(System.String[],Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags)">
            <summary>
            Send a ConnectUpdate packet and set the tags and ItemsHandlingFlags for the current connection to the provided params.
            </summary>
            <param name="tags">New tags for the current connection.</param>
            <param name="itemsHandlingFlags">New ItemsHandlingFlags for the current connection.</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.Game">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.Team">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.Slot">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.Tags">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.ItemsHandlingFlags">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.Uuid">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.UpdateConnectionOptions(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.UpdateConnectionOptions(Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ConnectionInfoHelper.UpdateConnectionOptions(System.String[],Archipelago.MultiClient.Net.Enums.ItemsHandlingFlags)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IDataStorageHelper">
            <summary>
            Provides access to a server side data storage to share and store values across sessions and players
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IDataStorageHelper.Item(Archipelago.MultiClient.Net.Enums.Scope,System.String)">
            <summary>
            Stored or retrieves a value from the server side data storage.
            Assignment operations like = or *= will run asynchronously on server only
            The retrievals are done synchronously however this storage is implemented using deferred execution.
            </summary>
            <param name="scope">The scope of the key</param>
            <param name="key">The key for which the value should be stored or retrieved</param>
            <returns>A value </returns>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IDataStorageHelper.Item(System.String)">
            <summary>
            Stored or retrieves a value from the server side data storage.
            Assignment operations like = or *= will run asynchronously on server only
            The retrievals are done synchronously however this storage is implemented using deferred execution.
            </summary>
            <param name="key">The key under which the value should be stored or retrieved</param>
            <returns>A value </returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.DataStorageHelper">
            <summary>
            Provides access to a server side data storage to share and store values across sessions and players
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.DataStorageUpdatedHandler">
            <summary>
            Delegate for the callback that is called when a value in the data storage is updated
            </summary>
            <param name="originalValue">The original value before the update</param>
            <param name="newValue">the current value</param>
            <param name="additionalArguments">the additional arguments passed to the set operation</param>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.Item(Archipelago.MultiClient.Net.Enums.Scope,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetHints(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetHintsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.TrackHints(System.Action{Archipelago.MultiClient.Net.Models.Hint[]},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetSlotData(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetSlotData``1(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetSlotDataAsync(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetSlotDataAsync``1(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetItemNameGroups(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetItemNameGroupsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetLocationNameGroups(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetLocationNameGroupsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetClientStatus(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetClientStatusAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.TrackClientStatus(System.Action{Archipelago.MultiClient.Net.Enums.ArchipelagoClientState},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetRaceMode">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.DataStorageHelper.GetRaceModeAsync">
            <inheritdoc />
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper">
            <summary>
            Methods for working with read-only data storage sets
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetHints(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves all unlocked hints for the specified player slot and team
            </summary>
            <param name="slot">the slot id of the player to request hints for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request hints for, defaults to the current player's team if left empty</param>
            <returns>An array of unlocked hints or null if the slot or team does not exist</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetHintsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves all unlocked hints for the specified player slot and team
            </summary>
            <param name="slot">the slot id of the player to request hints for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request hints for, defaults to the current player's team if left empty</param>
            <returns>An array of unlocked hints or null if the slot or team does not exist</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.TrackHints(System.Action{Archipelago.MultiClient.Net.Models.Hint[]},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets a callback to be called with all updates to the unlocked hints for the specified player slot and team
            </summary>
            <param name="onHintsUpdated">the method to call with the updated hints</param>
            <param name="retrieveCurrentlyUnlockedHints">should the currently unlocked hints be retrieved or just the updates</param>
            <param name="slot">the slot id of the player to request hints for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request hints for, defaults to the current player's team if left empty</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetSlotData(System.Nullable{System.Int32})">
            <summary>
            Retrieves the custom slot data for the specified slot
            </summary>
            <param name="slot">the slot id of the player to request slot data for, defaults to the current player's slot if left empty</param>
            <returns>An Dictionary with string keys, and custom defined values, the keys and values differ per game</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetSlotData``1(System.Nullable{System.Int32})">
            <summary>
            Retrieves the custom slot data for the specified slot
            </summary>
            <typeparam name="T">The type to convert the slot data to</typeparam>
            <param name="slot">The slot ID of the player ot request slot data for, defaults to the current player's slot if left empty</param>
            <returns>The slot data, converted to a modeled object of the specified type</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetSlotDataAsync(System.Nullable{System.Int32})">
            <summary>
            Retrieves the custom slot data for the specified slot
            </summary>
            <param name="slot">the slot id of the player to request slot data for, defaults to the current player's slot if left empty</param>
            <returns>An Dictionary with string keys, and custom defined values, the keys and values differ per game</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetSlotDataAsync``1(System.Nullable{System.Int32})">
            <summary>
            Retrieves the custom slot data for the specified slot
            </summary>
            <typeparam name="T">The type to convert the slot data to</typeparam>
            <param name="slot">the slot id of the player to request slot data for, defaults to the current player's slot if left empty</param>
            <returns>The slot data, converted to a modeled object of the specified type</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetItemNameGroups(System.String)">
            <summary>
            Retrieves the defined item name groups for the specified game
            </summary>
            <param name="game">the game name to request item name groups for, defaults to the current player's game if left empty</param>
            <returns>An Dictionary with item group names for keys and an array of item names as value</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetItemNameGroupsAsync(System.String)">
            <summary>
            Retrieves the defined item name groups for the specified game
            </summary>
            <param name="game">the game name to request item name groups for, defaults to the current player's game if left empty</param>
            <returns>An Dictionary with item group names for keys and an array of item names as value</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetLocationNameGroups(System.String)">
            <summary>
            Retrieves the defined location name groups for the specified game
            </summary>
            <param name="game">the game name to request location name groups for, defaults to the current player's game if left empty</param>
            <returns>An Dictionary with location group names for keys and an array of location names as value</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetLocationNameGroupsAsync(System.String)">
            <summary>
            Retrieves the defined location name groups for the specified game
            </summary>
            <param name="game">the game name to request location name groups for, defaults to the current player's game if left empty</param>
            <returns>An Dictionary with location group names for keys and an array of location names as value</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetClientStatus(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves the client status for the specified player slot and team
            </summary>
            <param name="slot">the slot id of the player to request the status for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request the status for, defaults to the current player's team if left empty</param>
            <returns>The status of the client or null if the slot or team does not exist</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetClientStatusAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves the client status for the specified player slot and team
            </summary>
            <param name="slot">the slot id of the player to request the status for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request the status for, defaults to the current player's team if left empty</param>
            <returns>The status of the client or null if the slot or team does not exist</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.TrackClientStatus(System.Action{Archipelago.MultiClient.Net.Enums.ArchipelagoClientState},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets a callback to be called with all updates to the client status for the specified player slot and team
            </summary>
            <param name="onStatusUpdated">the method to call with the updated hints</param>
            <param name="retrieveCurrentClientStatus">should the current status be retrieved or just the updates</param>
            <param name="slot">the slot id of the player to request the status for, defaults to the current player's slot if left empty</param>
            <param name="team">the team id of the player to request the status for, defaults to the current player's team if left empty</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetRaceMode">
            <summary>
            Retrieves the server's race mode setting. false for disabled or unavailable, true for enabled
            </summary>
            <returns>The race mode setting. false for disabled or unavailable, true for enabled</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IDataStorageWrapper.GetRaceModeAsync">
            <summary>
            Retrieves the server's race mode setting. false for disabled or unavailable, true for enabled
            </summary>
            <returns>The race mode setting. false for disabled or unavailable, true for enabled</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates">
            <summary>
            Delegates for the events that the IArchipelagoSocketHelper can raise
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates.PacketReceivedHandler">
            <summary>
            Handler for recieved and sucsesfully parsed packages
            </summary>
            <param name="packet">the archipelago packet</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates.PacketsSentHandler">
            <summary>
            Handler for packets published to the websocket, called before the packet is handled by the server
            </summary>
            <param name="packets"></param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates.ErrorReceivedHandler">
            <summary>
            Handler for error on the socket or during parsing of the packets
            </summary>
            <param name="e">the exception that occured</param>
            <param name="message">the error that occured</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates.SocketClosedHandler">
            <summary>
            Handler for when the underlaying socket connection is closed
            </summary>
            <param name="reason">the close reason</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ArchipelagoSocketHelperDelagates.SocketOpenedHandler">
            <summary>
            Handler for when the underlaying socket connection is opened to the archipelago server
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper">
            <summary>
            Provides access to the underlying websocket, so send or receive messages
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper.PacketReceived">
            <summary>
            Handler for recieved and sucsesfully parsed packages
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper.PacketsSent">
            <summary>
            Handler for packets published to the websocket, called before the packet is handled by the server
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper.ErrorReceived">
            <summary>
            Handler for error on the socket or during parsing of the packets
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper.SocketClosed">
            <summary>
            Handler for when the underlaying socket connection is closed
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IArchipelagoSocketHelper.SocketOpened">
            <summary>
            Handler for when the underlaying socket connection is opened to the archipelago server
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper">
            <summary>
            Provides way to mark locations as checked
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.AllLocations">
            <summary>
            All locations of the slot that's is connected to, both already checked and unchecked
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.AllLocationsChecked">
            <summary>
            All checked locations of the slot that's is connected to
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.AllMissingLocations">
            <summary>
            All unchecked locations of the slot that's is connected to
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.CheckedLocationsUpdated">
            <summary>
            event fired when new locations are checked, this can be because a location was checked remotely checked due to an !collect or locations you checked in an earlier session
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.CompleteLocationChecks(System.Int64[])">
            <summary>
                Submit the provided location ids as checked locations.
            </summary>
            <param name="ids">
                Location ids which have been checked.
            </param>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.CompleteLocationChecksAsync(System.Int64[])">
            <summary>
                Submit the provided location ids as checked locations.
            </summary>
            <param name="ids">
                Location ids which have been checked.
            </param>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.ScoutLocationsAsync(Archipelago.MultiClient.Net.Enums.HintCreationPolicy,System.Int64[])">
            <summary>
                Ask the server for the items which are present in the provided location ids.
            </summary>
            <param name="hintCreationPolicy">
                Specified if and how an official hint should be created on the server.
            </param>
            <param name="ids">
                The locations ids which are to be scouted.
            </param>
            <remarks>
                Repeated calls of this method before a LocationInfo packet is received will cause the stored
                callback to be overwritten with the most recent call. It is recommended you chain calls to this method
                within the callbacks themselves or call this only once.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.ScoutLocationsAsync(System.Boolean,System.Int64[])">
            <summary>
                Ask the server for the items which are present in the provided location ids.
            </summary>
            <param name="createAsHint">
                If true, creates a free hint for these locations.
            </param>
            <param name="ids">
                The locations ids which are to be scouted.
            </param>
            <remarks>
                Repeated calls of this method before a LocationInfo packet is received will cause the stored
                callback to be overwritten with the most recent call. It is recommended you chain calls to this method
                within the callbacks themselves or call this only once.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.ScoutLocationsAsync(System.Int64[])">
            <summary>
                Ask the server for the items which are present in the provided location ids.
            </summary>
            <param name="ids">
                The locations ids which are to be scouted.
            </param>
            <remarks>
                Repeated calls of this method before a LocationInfo packet is received will cause the stored
                callback to be overwritten with the most recent call. It is recommended you chain calls to this method
                within the callbacks themselves or call this only once.
            </remarks>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.GetLocationIdFromName(System.String,System.String)">
            <summary>
                Get the Id of a location from its name. Useful when a game knows its locations by name but not by Archipelago Id.
            </summary>
            <param name="game">
                The game to look up the locations from
            </param>
            <param name="locationName">
                The name of the location to check the Id for. Must match the contents of the datapackage.
            </param>
            <returns>
                Returns the locationId for the location name that was given or -1 if no location was found.
            </returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ILocationCheckHelper.GetLocationNameFromId(System.Int64,System.String)">
            <summary>
                Get the name of a location from its id. Useful when receiving a packet and it is necessary to find the name of the location.
            </summary>
            <param name="locationId">
                The Id of the location to look up the name for. Must match the contents of the datapackage.
            </param>
            <param name="game">
                The game to lookup the location id for, if null will look in the game the local player is connected to.
            	Negative location ids are always looked up under the Archipelago game
            </param>
            <returns>
                Returns the locationName for the provided locationId, or null if no such location is found.
            </returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.CheckedLocationsUpdatedHandler">
            <summary>
            delagate for the CheckedLocationsUpdated event
            </summary>
            <param name="newCheckedLocations"></param>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.CheckedLocationsUpdated">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.AllLocations">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.AllLocationsChecked">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.AllMissingLocations">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.CompleteLocationChecks(System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.CompleteLocationChecksAsync(System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.ScoutLocationsAsync(Archipelago.MultiClient.Net.Enums.HintCreationPolicy,System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.ScoutLocationsAsync(System.Boolean,System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.ScoutLocationsAsync(System.Int64[])">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.GetLocationIdFromName(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.LocationCheckHelper.GetLocationNameFromId(System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IMessageLogHelper">
            <summary>
            Allows clients to easily subscribe to incoming messages and helps formulating those messages correctly
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IMessageLogHelper.OnMessageReceived">
            <summary>
            Triggered for each message that should be presented to the player
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.MessageLogHelper">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.MessageLogHelper.MessageReceivedHandler">
            <summary>
            Delegate for the OnMessageReceived event
            </summary>
            <param name="message">The log message object, this object can be MessageLog.Messages classes, switch this message based on type to get access to finer details</param>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.MessageLogHelper.OnMessageReceived">
            <inheritdoc />
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IPlayerHelper">
            <summary>
            A helper class containing information about all players in the current multiworld
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.Players">
            <summary>
            A dictionary of all team's containing all their PlayerInfo's index by their slot
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.AllPlayers">
            <summary>
            A enumerable of PlayerInfo's for all players in the multiworld
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.ActivePlayer">
            <summary>
            The player info for the currently connected player
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.GetPlayerAlias(System.Int32)">
            <summary>
            Returns the Alias corresponding to the provided player slot
            Alias defaults to the player's name until a different alias is specifically set
            </summary>
            <param name="slot">The slot of which to retrieve the alias</param>
            <returns>The player's alias, or null if no such player is found</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.GetPlayerName(System.Int32)">
            <summary>
            Returns the Name corresponding to the provided player slot
            </summary>
            <param name="slot">The slot of which to retrieve the name</param>
            <returns>The player's name, or null if no such player is found</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.GetPlayerAliasAndName(System.Int32)">
            <summary>
            Returns the Alias and Name corresponding to the provided player slot
            Alias defaults to the player's name until a different alias is specifically set
            The result is returned in the format of "Alias (Name)"
            </summary>
            <param name="slot">The slot of which to retrieve the alias</param>
            <returns>The player's alias and name in the following format of "Alias (Name)", or null if no such player is found</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.GetPlayerInfo(System.Int32,System.Int32)">
            <summary>
            Gets the PlayerInfo for the provided team and slot, or null if no such team / slot exists
            </summary>
            <param name="team">the team to lookup the slot in</param>
            <param name="slot">the slot to lookup</param>
            <returns>the playerinfo of corresponding slot, or null if no such slot exists</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IPlayerHelper.GetPlayerInfo(System.Int32)">
            <summary>
            Gets the PlayerInfo for the provided team and slot, or null if no such slot exists
            </summary>
            <param name="slot">the slot to lookup</param>
            <returns>the playerinfo of corresponding slot, or null if no such slot exists</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.PlayerHelper">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerHelper.Players">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerHelper.AllPlayers">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerHelper.ActivePlayer">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerHelper.GetPlayerInfo(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerHelper.GetPlayerInfo(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerHelper.GetPlayerAlias(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerHelper.GetPlayerName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerHelper.GetPlayerAliasAndName(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.PlayerInfo">
            <summary>
            Information about a specific player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Team">
            <summary>
            The team of this player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Slot">
            <summary>
            The slot of this player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Alias">
            <summary>
            A custom name Alias for this player, that can optionally set with !alias, if no alias is set will return Name instead
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Name">
            <summary>
            The name of that player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Game">
            <summary>
            The game the player is playing
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Groups">
            <summary>
            A array of groups this player is part of
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.GroupMembers">
            <summary>
            If the slot is a group, an array of its member slots
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.IsSharingGroupWith(System.Int32,System.Int32)">
            <summary>
            Checks if the provided team and slot, are sharing any slot groups with this player
            </summary>
            <param name="team">The team to check</param>
            <param name="slot">The slot to check</param>
            <returns>Whether this player has any itemlinks in common with the specified player</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.GetGroupMembers(Archipelago.MultiClient.Net.Helpers.IPlayerHelper)">
            <summary>
            If this player is a group, gets its members. Otherwise returns null.
            </summary>
            <returns>returns the players info's of members from a group slot, or null if this slot is not a group</returns>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.PlayerInfo.IsGroup">
            <summary>
            Is true if the player is a group.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.IsRelatedTo(Archipelago.MultiClient.Net.Helpers.PlayerInfo)">
            <summary>
            True if this player is the same player, or if either player is a group (e.g. itemlinks) that contains the other player
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.op_Implicit(Archipelago.MultiClient.Net.Helpers.PlayerInfo)~System.Int32">
            <summary>
            Converts the PlayerInfo to the slot
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.ToString">
            <summary>
            Returns the Alias of the player
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.#ctor">
            <summary>
            Creates and Empty PlayerInfo object, should probably not even be exposed
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,Archipelago.MultiClient.Net.Models.NetworkSlot[],System.Int32[])">
            <summary>
            Creates an PlayerInfo object, used by json deserialization
            </summary>
            <param name="team">The team of this player</param>
            <param name="slot">The slot of this player</param>
            <param name="name">The name of that player</param>
            <param name="alias">The alias of that player</param>
            <param name="game">The game the player is playing</param>
            <param name="groups">An array of groups this player is part of</param>
            <param name="groupMembers">An array of player slots that are is part of this player if its a group otherwise null</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Equals(Archipelago.MultiClient.Net.Helpers.PlayerInfo)" -->
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.PlayerInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper">
            <summary>
            Provides simplified methods to receive items
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.GetItemName(System.Int64,System.String)">
            <summary>
                Perform a lookup using the DataPackage sent as a source of truth to lookup a particular item id for a particular game.
            </summary>
            <param name="id">
                Id of the item to lookup.
            </param>
            <param name="game">
                The game to lookup the item id for, if null will look in the game the local player is connected to.
            	Negative item ids are always looked up under the Archipelago game
            </param>
            <returns>
                The name of the item as a string, or null if no such item is found.
            </returns>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.Index">
            <summary>
            Total number of items received
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.AllItemsReceived">
            <summary>
            Full list of all items received
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.ItemReceived">
            <summary>
                Event triggered when an item is received. fires once for each item received
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.Any">
            <summary>
                Check whether there are any items in the queue. 
            </summary>
            <returns>
                True if the queue is not empty, otherwise false.
            </returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.PeekItem">
            <summary>
                Peek the next item on the queue to be handled. 
                The item will remain on the queue until dequeued with <see cref="M:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.DequeueItem"/>.
            </summary>
            <returns>
                The next item to be handled as a <see cref="T:Archipelago.MultiClient.Net.Models.NetworkItem"/>, or null if no such item is found.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.IReceivedItemsHelper.DequeueItem">
            <summary>
                Dequeues and returns the next item on the queue to be handled.
            </summary>
            <returns>
                The next item to be handled as a <see cref="T:Archipelago.MultiClient.Net.Models.NetworkItem"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.
            </exception>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.Index">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.AllItemsReceived">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.ItemReceivedHandler">
            <inheritdoc/>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.ItemReceived">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.Any">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.PeekItem">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.DequeueItem">
            <inheritdoc/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Helpers.ReceivedItemsHelper.GetItemName(System.Int64,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper">
            <summary>
            Provides information about the current state of the server
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.HintCost">
            <summary>
            The amount of points it costs to receive a hint from the server.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.HintCostPercentage">
            <summary>
            The percentage of total locations that need to be checked to receive a hint from the server.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.LocationCheckPoints">
            <summary>
            The amount of hint points you receive per item/location check completed.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.HintPoints">
            <summary>
            The client's current hint points.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.Version">
            <summary>
            The version of Archipelago which the server is running.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.GeneratorVersion">
            <summary>
            The version of Archipelago which generated the multiworld.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.HasPassword">
            <summary>
            Denoted whether a password is required to join this room.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.ReleasePermissions">
            <summary>
            An enumeration containing the possible release command permission.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.ForfeitPermissions">
            <summary>
            An enumeration containing the possible forfeit command permission. 
            Deprecated, use Release Permissions instead
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.CollectPermissions">
            <summary>
            An enumeration containing the possible collect command permission.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.RemainingPermissions">
            <summary>
            An enumeration containing the possible remaining command permission.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.Seed">
            <summary>
            Uniquely identifying name of this generation
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.RoomInfoSendTime">
            <summary>
            Time stamp of we first connected to the server, and the server send us the RoomInfoPacker.
            Send for time synchronization if wanted for things like the DeathLink Bounce.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.IRoomStateHelper.ServerTags">
            <summary>
            Denotes special features or capabilities that the server is capable of.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Helpers.RoomStateHelper">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.HintCost">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.HintCostPercentage">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.LocationCheckPoints">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.HintPoints">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.Version">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.GeneratorVersion">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.HasPassword">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.ReleasePermissions">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.ForfeitPermissions">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.CollectPermissions">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.RemainingPermissions">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.Seed">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.RoomInfoSendTime">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Helpers.RoomStateHelper.ServerTags">
            <inheritdoc/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.LoginSuccessful.Team">
            <summary>
            Your team number.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.LoginSuccessful.Slot">
            <summary>
            Your slot number on your team.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.LoginSuccessful.SlotData">
            <summary>
            Contains a slot data, differs per game
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.AdminCommandResultLogMessage">
            <summary>
            An admin command result message to display to the user, consisting of an array of message parts to form a sentence.
            The `AdminCommandResultLogMessage` is send in response to a client using `!admin` command
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.ChatLogMessage">
            <summary>
            An chat message to display to the user, consisting of an array of message parts to form a sentence.
            The `ChatLogMessage` is send in response to a client chatting some message
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ChatLogMessage.Message">
            <summary>
            The message that was chatted
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.CollectLogMessage">
            <summary>
            An collect message to display to the user, consisting of an array of message parts to form a sentence.
            The `CollectLogMessage` is send in response to a client collecting their items
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.CommandResultLogMessage">
            <summary>
            An command result message to display to the user, consisting of an array of message parts to form a sentence.
            The `CommandResultLogMessage` is send in response to a client using an `!` command (e.g. !status)
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.CountdownLogMessage">
            <summary>
            A countdown message to display to the user, consisting of an array of message parts to form a sentence
            countdown message also contains the remaining seconds for the countdown for more specific processing
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.GoalLogMessage">
            <summary>
            An goal message to display to the user, consisting of an array of message parts to form a sentence.
            The `GoalLogMessage` is send in response to a client completing their goal
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.HintItemSendLogMessage">
            <summary>
            An item hint message to display to the user, consisting of an array of message parts to form a sentence.
            The `HintItemSendLogMessage` is send in response to a client hinting for an item.
            Item hint messages contain additional information about the item that was sent for more specific processing
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.HintItemSendLogMessage.IsFound">
            <summary>
            Indicates if the location of this item was already checked
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemCheatLogMessage">
            <summary>
            An item cheat message to display to the user, consisting of an array of message parts to form a sentence.
            Item cheat messages contain additional information about the item that was in response to an `!getitem` command
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage">
             <summary>
             An item send message to display to the user, consisting of an array of message parts to form a sentence.
             The `ItemSendLogMessage` is send in response to a client obtaining an item.
             Item send messages contain additional information about the item that was sent for more specific processing.
            
             `ItemSendLogMessage` also serves as the base class for <see cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.HintItemSendLogMessage"/> and <see cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemCheatLogMessage"/>
             </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.Receiver">
            <summary>
            The player who received the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.Sender">
            <summary>
            The player who sent the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.IsReceiverTheActivePlayer">
            <summary>
            Checks if the Receiver is the current connected player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.IsSenderTheActivePlayer">
            <summary>
            True if the Sender is the current connected player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.IsRelatedToActivePlayer">
            <summary>
            True if either the Receiver or Sender share any slot groups (e.g. itemlinks) with the current connected player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ItemSendLogMessage.Item">
            <summary>
            The Item that was send
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.JoinLogMessage">
            <summary>
            An join message to display to the user, consisting of an array of message parts to form a sentence.
            The `JoinLogMessage` is send in response to a client joining the multiworld
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.JoinLogMessage.Tags">
            <summary>
            The tags used by the client, tags are used for certain functionality that is shared across the mutliworld (e.g. DeathLink)
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.LeaveLogMessage">
            <summary>
            An leave message to display to the user, consisting of an array of message parts to form a sentence.
            The `LeaveLogMessage` is send in response to a client disconnecting from the multiworld
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.LogMessage">
            <summary>
            A message to display to the user, consisting of an array of message parts to form a sentence
            This is the base class for all LogMessage's
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.LogMessage.Parts">
            <summary>
            Different part of a message that should be used to build a sentence
            The order of the parts is the order the different sections should appear in
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.MessageLog.Messages.LogMessage.ToString">
            <summary>
            Uses the Parts to form a correct sentence
            </summary>
            <returns>the sentence this LogMessage is representing</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage">
             <summary>
             The `PlayerSpecificLogMessage` is send a base class for LogMessage's that are made in the context of a specific player.
             Item player specific messages contain additional information about the specific player.
            
             `ItemSendLogMessage` also serves as the base class for <see cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.HintItemSendLogMessage"/> and <see cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.ItemCheatLogMessage"/>
             </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage.Player">
            <summary>
            The player information about the player this message is concerning
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage.IsActivePlayer">
            <summary>
            True if the player this message is concerning is the current connected player
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage.IsRelatedToActivePlayer">
            <summary>
            True if the player this message is concerning any slot groups (e.g. itemlinks) with the current connected player
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.ReleaseLogMessage">
            <summary>
            An release message to display to the user, consisting of an array of message parts to form a sentence.
            The `ReleaseLogMessage` is send in response to a client releasing their items
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.ServerChatLogMessage">
            <summary>
            An chat message to display to the user, consisting of an array of message parts to form a sentence.
            The `ServerChatLogMessage` is send in response to the server chatting some message
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.ServerChatLogMessage.Message">
            <summary>
            The message that was chatted
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.TagsChangedLogMessage">
            <summary>
            An tags changed message to display to the user, consisting of an array of message parts to form a sentence.
            The `TagsChangedLogMessage` is send in response to a client changing their tags
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Messages.PlayerSpecificLogMessage"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Messages.TagsChangedLogMessage.Tags">
            <summary>
            The tags used by the client, tags are used for certain functionality that is shared across the mutliworld (e.g. DeathLink)
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Messages.TutorialLogMessage">
            <summary>
            An tutorial message to display to the user, consisting of an array of message parts to form a sentence.
            The `TutorialLogMessage` is send in response to a client joining a multiworld (e.g. "Now that you are connected...")
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.EntranceMessagePart">
            <summary>
            Part of a LogMessage that contains information about the entrance
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.HintStatusMessagePart">
            <summary>
            Part of a LogMessage that contains information about the entrance
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.ItemMessagePart">
            <summary>
            Part of a LogMessage that contains information about an item
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.ItemMessagePart.Flags">
            <summary>
            The flags that identify the items its special properties
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.ItemMessagePart.ItemId">
            <summary>
            The id of the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.ItemMessagePart.Player">
            <summary>
            The player that owns the item (receiver)
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.LocationMessagePart">
            <summary>
            Part of a LogMessage that contains information about an location
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.LocationMessagePart.LocationId">
            <summary>
            The name of the location
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.LocationMessagePart.Player">
            <summary>
            The player that owns the location
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart">
            <summary>
            Part of a LogMessage that contains information on how to display the piece of text
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart.Type">
            <summary>
            The type of message part
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart.Color">
            <summary>
            The specified or default color for this message part
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart.IsBackgroundColor">
            <summary>
            The specified background color for this message part
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart.ToString">
            <summary>
            The text to display of this message part
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType">
            <summary>
            The type of message part
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.Text">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.Player">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.PlayerMessagePart"/>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.Item">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.ItemMessagePart"/>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.Location">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.LocationMessagePart"/>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.Entrance">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.EntranceMessagePart"/>
        </member>
        <member name="F:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePartType.HintStatus">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.HintStatusMessagePart"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.MessageLog.Parts.PlayerMessagePart">
            <summary>
            Part of a LogMessage that contains information about an item
            </summary>
            <seealso cref="T:Archipelago.MultiClient.Net.MessageLog.Parts.MessagePart"/>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.Color">
            <summary>
            Polyfill for System.Drawing.Color for games on runtimes which do not supply a `System.Drawing.dll`.
            Not focused on memory or computation efficiency, we just need something that works reasonably well.
            Transparency/alpha channel is not handled.
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Red">
            <summary>
            Predefined Archipelago Color Red (used for not found hints)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Green">
            <summary>
            Predefined Archipelago Color Green (used for found hints)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Yellow">
            <summary>
            Predefined Archipelago Color Yellow (used for the local player)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Blue">
            <summary>
            Predefined Archipelago Color Blue (used for entrances)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Magenta">
            <summary>
            Predefined Archipelago Color Magenta (used for other players)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Cyan">
            <summary>
            Predefined Archipelago Color Cyan (used for normal items)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Black">
            <summary>
            Predefined Archipelago Color Black
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.White">
            <summary>
            Predefined Archipelago Color White (default text color)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.SlateBlue">
            <summary>
            Predefined Archipelago Color SlateBlue (used for important items)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Salmon">
            <summary>
            Predefined Archipelago Color Salmon (used for traps)
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.Color.Plum">
            <summary>
            Predefined Archipelago Color Plum (used for progression item)
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.Color.R">
            <summary>
            Red
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.Color.G">
            <summary>
            Green
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.Color.B">
            <summary>
            Blue
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            A color
            </summary>
            <param name="r">Red</param>
            <param name="g">Green</param>
            <param name="b">Blue</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.Equals(Archipelago.MultiClient.Net.Models.Color)">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.op_Equality(Archipelago.MultiClient.Net.Models.Color,Archipelago.MultiClient.Net.Models.Color)">
            <summary>
            Value Equality
            </summary>
            <param name="left">a color</param>
            <param name="right">a color</param>
            <returns>true, if both sides represent the same color</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Color.op_Inequality(Archipelago.MultiClient.Net.Models.Color,Archipelago.MultiClient.Net.Models.Color)">
            <summary>
            Value In-Equality
            </summary>
            <param name="left">a color</param>
            <param name="right">a color</param>
            <returns>true, if both sides represent an different color</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.DataStorageElement">
            <summary>
            An entry in the DataStorage
            </summary>
        </member>
        <member name="E:Archipelago.MultiClient.Net.Models.DataStorageElement.OnValueChanged">
            <summary>
            Event handler will be called when the server side value for this key changes
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.Initialize(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Initializes a value in the server side data storage
            Will not override any existing value, only set the default value if none existed
            </summary>
            <param name="value">The default value for the key</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.Initialize(System.Collections.IEnumerable)">
            <summary>
            Initializes a value in the server side data storage
            Will not override any existing value, only set the default value if none existed
            </summary>
            <param name="value">The default value for the key</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.GetAsync``1">
            <summary>
            Retrieves the value of a certain key from server side data storage.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.GetAsync">
            <summary>
            Retrieves the value of a certain key from server side data storage.
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.To``1">
            <summary>
            Retrieves the value from the server and casts it to the given type
            Cannot be used in combination with other operators
            </summary>
            <returns>The value from server as the given type</returns>
            <exception cref="T:System.InvalidOperationException">
                DataStorageElement.To() cannot be used together with other operations on the DataStorageElement
                Other operations include =, +=, /=, + etc
            </exception>
            <exception cref="T:Archipelago.MultiClient.Net.Exceptions.ArchipelagoSocketClosedException">
                The websocket connection is not alive
            </exception>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.DataStorageElement.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.ItemInfo">
            <summary>
            Information about an item and its location
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.ItemId">
            <summary>
            The item id of the item. Item ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.LocationId">
            <summary>
            The location id of the item inside the world. Location ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.Player">
            <summary>
            The player of the world the item is located in
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.Flags">
            <summary>
            Enum flags that describe special properties of the Item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.ItemName">
            <summary>
            The name of the item, null if the name cannot be resolved
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.ItemDisplayName">
            <summary>
            The name of the item for display purposes, returns a fallback string containing the ItemId if the name cannot be resolved 
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.LocationName">
            <summary>
            The name of the location that item is at, null if the name cannot be resolved
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.LocationDisplayName">
            <summary>
            The name of the location for display purposes, returns a fallback string containing the LocationId if the name cannot be resolved 
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.ItemGame">
            <summary>
            The game the item belongs to
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ItemInfo.LocationGame">
            <summary>
            The game the location belongs to
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.ItemInfo.#ctor(Archipelago.MultiClient.Net.Models.NetworkItem,System.String,System.String,Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver,Archipelago.MultiClient.Net.Helpers.PlayerInfo)">
            <summary>
            The constructor what else did you expect it to be
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.ItemInfo.ToSerializable">
            <summary>
            Converts this ItemInfo in to a serializable class that can be converted from and to json
            </summary>
            <returns>an SerializableItemInfo containing all the inforation of the ItemInfo it was created with</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.ScoutedItemInfo">
            <summary>
            Information about an item and its location
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ScoutedItemInfo.Player">
            <summary>
            The player to receive the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.ScoutedItemInfo.IsReceiverRelatedToActivePlayer">
            <summary>
            True if the receiver is concerning any slot groups (e.g. itemlinks) with the current connected player
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.ScoutedItemInfo.#ctor(Archipelago.MultiClient.Net.Models.NetworkItem,System.String,System.String,Archipelago.MultiClient.Net.DataPackage.IItemInfoResolver,Archipelago.MultiClient.Net.Helpers.IPlayerHelper,Archipelago.MultiClient.Net.Helpers.PlayerInfo)">
            <summary>
            The constructor what else did you expect it to be
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.NetworkItem">
            <summary>
            Item information
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.NetworkItem.Item">
            <summary>
            The item id of the item. Item ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.NetworkItem.Location">
            <summary>
            The location id of the item inside the world. Location ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.NetworkItem.Player">
            <summary>
            The player slot of the world the item is located in, except when inside an LocationInfo Packet then it will be the slot of the player to receive the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.NetworkItem.Flags">
            <summary>
            Enum flags that describe special properties of the Item
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.OperationSpecification">
            <summary>
            An opperation to apply to the DataStorage
            </summary>
        </member>
        <member name="F:Archipelago.MultiClient.Net.Models.OperationSpecification.OperationType">
            <inheritdoc cref="T:Archipelago.MultiClient.Net.Models.OperationType"/>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.OperationSpecification.Value">
            <summary>
            The value related to this operation
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.OperationSpecification.ToString">
            <inheritdoc />
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.Operation">
            <summary>
            Operations to apply to the DataStorage
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)">
            <summary>
            Performs a Math.Min() on the store its current value vs the provided value
            </summary>
            <param name="i">The value to compare to</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int64)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Single)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Double)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Decimal)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Numerics.BigInteger)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Min(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)">
            <summary>
            Performs a Math.Max() on the store its current value vs the provided value
            </summary>
            <param name="i">The value to compare to</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int64)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Single)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Double)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Decimal)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Numerics.BigInteger)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Max(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Remove(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Performs a List.Remove() to remove the first occurrence of the provided value
            </summary>
            <param name="value">The value to remove</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Pop(System.Int32)">
            <summary>
            Performs a List.RemoveAt() or Dictionary.Remove() to remove a specified index or key from a list or dictionary
            </summary>
            <param name="value">The index or key to remove</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Pop(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Operation.Pop(System.Int32)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Update(System.Collections.IDictionary)">
            <summary>
            Performs Dictionary merge, adding all keys from value to the original dict overriding existing keys
            </summary>
            <param name="dictionary">The dictionary to merge in</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Floor">
            <summary>
            Performs a Math.Floor() on the store its current value
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Operation.Ceiling">
            <summary>
            Performs a Math.Ceiling() on the store its current value
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.Bitwise">
            <summary>
            Bitwise operations to apply to the DataStorage
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.Xor(System.Int64)">
            <summary>
            Performs a bitwise Exclusive OR on the store its current value vs the provided value
            </summary>
            <param name="i">The value to XOR with</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.Xor(System.Numerics.BigInteger)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Bitwise.Xor(System.Int64)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.Or(System.Int64)">
            <summary>
            Performs a bitwise OR on the store its current value vs the provided value
            </summary>
            <param name="i">The value to OR with</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.Or(System.Numerics.BigInteger)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Bitwise.Or(System.Int64)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.And(System.Int64)">
            <summary>
            Performs a bitwise AND on the store its current value vs the provided value
            </summary>
            <param name="i">The value to AND with</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.And(System.Numerics.BigInteger)">
            <inheritdoc cref="M:Archipelago.MultiClient.Net.Models.Bitwise.And(System.Int64)"/>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.LeftShift(System.Int64)">
            <summary>
            Performs a bitwise left shift on the store its current value by the provided amount
            </summary>
            <param name="i">the amount to shift</param>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Bitwise.RightShift(System.Int64)">
            <summary>
            Performs a bitwise right shift on the store its current value by the provided amount
            </summary>
            <param name="i">the amount to shift</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.Callback">
            <summary>
            Provides a method to be called when a certain DataStorage operation completes
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.Callback.Add(Archipelago.MultiClient.Net.Helpers.DataStorageHelper.DataStorageUpdatedHandler)">
            <summary>
            Adds a callback to the current sequence of operations.
            This callback will be called only once after the server is done processing your operations.
            This is useful in-case you need to know the results of your operations when they depend on the current state of the server
            </summary>
            <param name="callback">The method to be called with the oldValue at the start of your operation and the newValue after your operation completed</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.AdditionalArgument">
            <summary>
            Provides a way to add additional arguments to the DataStorage operation
            additional arguments are send back by the server and can be checked in callbacks or handlers
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.AdditionalArgument.Add(System.String,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Adds an additional argument to the current datastorage operations.
            additional arguments are send back by the server and can be checked in callbacks or handlers
            </summary>
            <param name="name">The name of the argument</param>
            <param name="value">The value of the argument</param>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo">
            <summary>
            The minimal information needed to deserialize an ItemInfo given the context of an active archipelago session
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.ItemId">
            <summary>
            The item id of the item. Item ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.LocationId">
            <summary>
            The location id of the item inside the world. Location ids are in the range of ± (2^53)-1.
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.PlayerSlot">
            <summary>
            The player slot
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.Flags">
            <summary>
            Enum flags that describe special properties of the Item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.ItemGame">
            <summary>
            The game the item belongs to
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.MinimalSerializableItemInfo.LocationGame">
            <summary>
            The game the location belongs to
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Models.SerializableItemInfo">
            <summary>
            An Json Serializable version of an ItemInfo
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.IsScout">
            <summary>
            Whether or not this ItemInfo came from an location scout
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.Player">
            <summary>
            The player of the world the item is located in, unless IsScout is true than its the player who will receive the item
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.ItemName">
            <summary>
            The name of the item, null if the name cannot be resolved
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.LocationName">
            <summary>
            The name of the location that item is at, null if the name cannot be resolved
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.ItemDisplayName">
            <summary>
            The name of the item for display purposes, returns a fallback string containing the ItemId if the name cannot be resolved 
            </summary>
        </member>
        <member name="P:Archipelago.MultiClient.Net.Models.SerializableItemInfo.LocationDisplayName">
            <summary>
            The name of the location for display purposes, returns a fallback string containing the LocationId if the name cannot be resolved 
            </summary>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.SerializableItemInfo.ToJson(System.Boolean)">
            <summary>
            Converts the `SerializableItemInfo` into an json string, either the full length context or a compact context can be preserved
            If the json string contained the full context, then it can be deserialized even when no Archipelago session is provided
            If the json string contained the minimal context, then during deserialization an active archipelago session must be provided for additional context
            </summary>
            <param name="full">Should the json contain the full lengthy context, or just the minimal info to reconstruct it later</param>
            <returns>The json representation of this ItemInfo</returns>
        </member>
        <member name="M:Archipelago.MultiClient.Net.Models.SerializableItemInfo.FromJson(System.String,Archipelago.MultiClient.Net.IArchipelagoSession)">
            <summary>
            Converts the json string back to an `SerializableItemInfo`
            If the json string contained the full context, than the optional ArchipelagoSession can be left empty
            If the json string contained the minimal context, the optional ArchipelagoSession should be provided else context will be missing
            </summary>
            <param name="json">the json string to input</param>
            <param name="session">an reference to an active archipelago session to retrieve contexts such as items names and player data</param>
            <returns>The deserialized ItemInfo</returns>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Packets.RoomUpdatePacket">
            <summary>
            Sent when there is a need to update information about the present game session,
            All arguments for this packet are nullable, only the properties that are not null contain changes.
            </summary>
        </member>
        <member name="T:Archipelago.MultiClient.Net.Packets.UnknownPacket">
            <summary>
            Packet is used whenever the server sends us a packet that we didnt implement in the library
            </summary>
        </member>
    </members>
</doc>
