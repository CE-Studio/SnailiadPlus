//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControllerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControllerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""Controller"",
            ""id"": ""ce9783a6-3739-4525-bd85-3ab86257426a"",
            ""actions"": [
                {
                    ""name"": ""StickL"",
                    ""type"": ""Value"",
                    ""id"": ""bbb4674b-4330-4be7-99cc-94b9d3563cad"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StickLClick"",
                    ""type"": ""Button"",
                    ""id"": ""9528139f-4e97-4a60-a438-a0e841bda904"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickR"",
                    ""type"": ""Value"",
                    ""id"": ""b98928c1-212a-4350-adb8-e36542f6cf45"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StickRClick"",
                    ""type"": ""Button"",
                    ""id"": ""8d2ad142-6cfd-472c-8787-5479722f43af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceL"",
                    ""type"": ""Button"",
                    ""id"": ""4a7ecd7c-d379-46e4-97c5-359f4270eb83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceR"",
                    ""type"": ""Button"",
                    ""id"": ""8124acdb-e28c-4210-bbeb-a6df8be3e89a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceU"",
                    ""type"": ""Button"",
                    ""id"": ""b9f862f1-3eb9-48b0-84ea-ae0a05297443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceD"",
                    ""type"": ""Button"",
                    ""id"": ""26a50f2c-82b0-4144-a852-bdeddf8daab1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DPadL"",
                    ""type"": ""Button"",
                    ""id"": ""a08fd3ff-aa03-49e1-8ae7-2369560b4caf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DPadR"",
                    ""type"": ""Button"",
                    ""id"": ""9a6772bf-f5bc-48e6-96fd-3b84ac5e2955"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DPadU"",
                    ""type"": ""Button"",
                    ""id"": ""e4f85969-ede1-4db5-8cce-f44ddfc0165b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DPadD"",
                    ""type"": ""Button"",
                    ""id"": ""c8e8b02d-8d40-452f-9439-4b5f8aa0f219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BumperL"",
                    ""type"": ""Button"",
                    ""id"": ""ff8eec99-39cb-429a-81e9-b04995176017"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerL"",
                    ""type"": ""Button"",
                    ""id"": ""34ba4126-279a-4fc7-9d20-d7a4ec83dae0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BumperR"",
                    ""type"": ""Button"",
                    ""id"": ""e90687da-4a89-455b-8dfc-dbcd884c3269"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BumperR1"",
                    ""type"": ""Button"",
                    ""id"": ""48159ed4-1b9d-4604-8a93-67a9fc59a787"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""d3ace2ee-8fb4-4eb4-966b-1b7ad310fd06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""4411a96c-28e3-4ac1-be70-c96ef63a2ebd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""33987e0f-068f-42de-ab44-39f5ea3cf7c4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""StickL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""334f3843-e6db-4997-a706-b04d20b04667"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91a92767-b850-4ac3-a73f-27275131a19b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""StickR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f994d81-a81f-4fed-961d-98f4cb629550"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20baf3d7-7588-49f3-89a7-8022bfbc20a1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2289bda-0f92-4b70-9204-3013b9f1a58d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0fbc902-a4e6-4a20-ac7f-39c11675811e"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""StickLClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4d7467c-1b31-4502-9aa2-8e1adc1cf301"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""StickRClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a33b4de9-1ce2-4da8-b4e4-c543b40f8c2f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DPadL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82acf216-599a-42a6-ae58-9c8ff1aea3a4"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DPadR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfa171c0-68de-4864-9192-3df391c4aa93"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DPadU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eec427ed-a805-4420-a999-3c754dc6a3df"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DPadD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f93c0f8-aaee-43ec-a636-c6f32dd13197"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BumperL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00ce5108-e5bc-47e1-9eb0-84f8ad4f6f03"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TriggerL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""983fc522-db92-4355-b87f-cbb3d3acff59"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BumperR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df3b2430-de19-4473-a645-3441ac82dcb9"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BumperR1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce0ffcd7-1a42-458b-b968-c95f36ce647f"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""267076af-c7e1-4967-be39-36a732bb142f"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_StickL = m_Controller.FindAction("StickL", throwIfNotFound: true);
        m_Controller_StickLClick = m_Controller.FindAction("StickLClick", throwIfNotFound: true);
        m_Controller_StickR = m_Controller.FindAction("StickR", throwIfNotFound: true);
        m_Controller_StickRClick = m_Controller.FindAction("StickRClick", throwIfNotFound: true);
        m_Controller_FaceL = m_Controller.FindAction("FaceL", throwIfNotFound: true);
        m_Controller_FaceR = m_Controller.FindAction("FaceR", throwIfNotFound: true);
        m_Controller_FaceU = m_Controller.FindAction("FaceU", throwIfNotFound: true);
        m_Controller_FaceD = m_Controller.FindAction("FaceD", throwIfNotFound: true);
        m_Controller_DPadL = m_Controller.FindAction("DPadL", throwIfNotFound: true);
        m_Controller_DPadR = m_Controller.FindAction("DPadR", throwIfNotFound: true);
        m_Controller_DPadU = m_Controller.FindAction("DPadU", throwIfNotFound: true);
        m_Controller_DPadD = m_Controller.FindAction("DPadD", throwIfNotFound: true);
        m_Controller_BumperL = m_Controller.FindAction("BumperL", throwIfNotFound: true);
        m_Controller_TriggerL = m_Controller.FindAction("TriggerL", throwIfNotFound: true);
        m_Controller_BumperR = m_Controller.FindAction("BumperR", throwIfNotFound: true);
        m_Controller_BumperR1 = m_Controller.FindAction("BumperR1", throwIfNotFound: true);
        m_Controller_Start = m_Controller.FindAction("Start", throwIfNotFound: true);
        m_Controller_Select = m_Controller.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller
    private readonly InputActionMap m_Controller;
    private List<IControllerActions> m_ControllerActionsCallbackInterfaces = new List<IControllerActions>();
    private readonly InputAction m_Controller_StickL;
    private readonly InputAction m_Controller_StickLClick;
    private readonly InputAction m_Controller_StickR;
    private readonly InputAction m_Controller_StickRClick;
    private readonly InputAction m_Controller_FaceL;
    private readonly InputAction m_Controller_FaceR;
    private readonly InputAction m_Controller_FaceU;
    private readonly InputAction m_Controller_FaceD;
    private readonly InputAction m_Controller_DPadL;
    private readonly InputAction m_Controller_DPadR;
    private readonly InputAction m_Controller_DPadU;
    private readonly InputAction m_Controller_DPadD;
    private readonly InputAction m_Controller_BumperL;
    private readonly InputAction m_Controller_TriggerL;
    private readonly InputAction m_Controller_BumperR;
    private readonly InputAction m_Controller_BumperR1;
    private readonly InputAction m_Controller_Start;
    private readonly InputAction m_Controller_Select;
    public struct ControllerActions
    {
        private @ControllerInput m_Wrapper;
        public ControllerActions(@ControllerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @StickL => m_Wrapper.m_Controller_StickL;
        public InputAction @StickLClick => m_Wrapper.m_Controller_StickLClick;
        public InputAction @StickR => m_Wrapper.m_Controller_StickR;
        public InputAction @StickRClick => m_Wrapper.m_Controller_StickRClick;
        public InputAction @FaceL => m_Wrapper.m_Controller_FaceL;
        public InputAction @FaceR => m_Wrapper.m_Controller_FaceR;
        public InputAction @FaceU => m_Wrapper.m_Controller_FaceU;
        public InputAction @FaceD => m_Wrapper.m_Controller_FaceD;
        public InputAction @DPadL => m_Wrapper.m_Controller_DPadL;
        public InputAction @DPadR => m_Wrapper.m_Controller_DPadR;
        public InputAction @DPadU => m_Wrapper.m_Controller_DPadU;
        public InputAction @DPadD => m_Wrapper.m_Controller_DPadD;
        public InputAction @BumperL => m_Wrapper.m_Controller_BumperL;
        public InputAction @TriggerL => m_Wrapper.m_Controller_TriggerL;
        public InputAction @BumperR => m_Wrapper.m_Controller_BumperR;
        public InputAction @BumperR1 => m_Wrapper.m_Controller_BumperR1;
        public InputAction @Start => m_Wrapper.m_Controller_Start;
        public InputAction @Select => m_Wrapper.m_Controller_Select;
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        public void AddCallbacks(IControllerActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllerActionsCallbackInterfaces.Add(instance);
            @StickL.started += instance.OnStickL;
            @StickL.performed += instance.OnStickL;
            @StickL.canceled += instance.OnStickL;
            @StickLClick.started += instance.OnStickLClick;
            @StickLClick.performed += instance.OnStickLClick;
            @StickLClick.canceled += instance.OnStickLClick;
            @StickR.started += instance.OnStickR;
            @StickR.performed += instance.OnStickR;
            @StickR.canceled += instance.OnStickR;
            @StickRClick.started += instance.OnStickRClick;
            @StickRClick.performed += instance.OnStickRClick;
            @StickRClick.canceled += instance.OnStickRClick;
            @FaceL.started += instance.OnFaceL;
            @FaceL.performed += instance.OnFaceL;
            @FaceL.canceled += instance.OnFaceL;
            @FaceR.started += instance.OnFaceR;
            @FaceR.performed += instance.OnFaceR;
            @FaceR.canceled += instance.OnFaceR;
            @FaceU.started += instance.OnFaceU;
            @FaceU.performed += instance.OnFaceU;
            @FaceU.canceled += instance.OnFaceU;
            @FaceD.started += instance.OnFaceD;
            @FaceD.performed += instance.OnFaceD;
            @FaceD.canceled += instance.OnFaceD;
            @DPadL.started += instance.OnDPadL;
            @DPadL.performed += instance.OnDPadL;
            @DPadL.canceled += instance.OnDPadL;
            @DPadR.started += instance.OnDPadR;
            @DPadR.performed += instance.OnDPadR;
            @DPadR.canceled += instance.OnDPadR;
            @DPadU.started += instance.OnDPadU;
            @DPadU.performed += instance.OnDPadU;
            @DPadU.canceled += instance.OnDPadU;
            @DPadD.started += instance.OnDPadD;
            @DPadD.performed += instance.OnDPadD;
            @DPadD.canceled += instance.OnDPadD;
            @BumperL.started += instance.OnBumperL;
            @BumperL.performed += instance.OnBumperL;
            @BumperL.canceled += instance.OnBumperL;
            @TriggerL.started += instance.OnTriggerL;
            @TriggerL.performed += instance.OnTriggerL;
            @TriggerL.canceled += instance.OnTriggerL;
            @BumperR.started += instance.OnBumperR;
            @BumperR.performed += instance.OnBumperR;
            @BumperR.canceled += instance.OnBumperR;
            @BumperR1.started += instance.OnBumperR1;
            @BumperR1.performed += instance.OnBumperR1;
            @BumperR1.canceled += instance.OnBumperR1;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
        }

        private void UnregisterCallbacks(IControllerActions instance)
        {
            @StickL.started -= instance.OnStickL;
            @StickL.performed -= instance.OnStickL;
            @StickL.canceled -= instance.OnStickL;
            @StickLClick.started -= instance.OnStickLClick;
            @StickLClick.performed -= instance.OnStickLClick;
            @StickLClick.canceled -= instance.OnStickLClick;
            @StickR.started -= instance.OnStickR;
            @StickR.performed -= instance.OnStickR;
            @StickR.canceled -= instance.OnStickR;
            @StickRClick.started -= instance.OnStickRClick;
            @StickRClick.performed -= instance.OnStickRClick;
            @StickRClick.canceled -= instance.OnStickRClick;
            @FaceL.started -= instance.OnFaceL;
            @FaceL.performed -= instance.OnFaceL;
            @FaceL.canceled -= instance.OnFaceL;
            @FaceR.started -= instance.OnFaceR;
            @FaceR.performed -= instance.OnFaceR;
            @FaceR.canceled -= instance.OnFaceR;
            @FaceU.started -= instance.OnFaceU;
            @FaceU.performed -= instance.OnFaceU;
            @FaceU.canceled -= instance.OnFaceU;
            @FaceD.started -= instance.OnFaceD;
            @FaceD.performed -= instance.OnFaceD;
            @FaceD.canceled -= instance.OnFaceD;
            @DPadL.started -= instance.OnDPadL;
            @DPadL.performed -= instance.OnDPadL;
            @DPadL.canceled -= instance.OnDPadL;
            @DPadR.started -= instance.OnDPadR;
            @DPadR.performed -= instance.OnDPadR;
            @DPadR.canceled -= instance.OnDPadR;
            @DPadU.started -= instance.OnDPadU;
            @DPadU.performed -= instance.OnDPadU;
            @DPadU.canceled -= instance.OnDPadU;
            @DPadD.started -= instance.OnDPadD;
            @DPadD.performed -= instance.OnDPadD;
            @DPadD.canceled -= instance.OnDPadD;
            @BumperL.started -= instance.OnBumperL;
            @BumperL.performed -= instance.OnBumperL;
            @BumperL.canceled -= instance.OnBumperL;
            @TriggerL.started -= instance.OnTriggerL;
            @TriggerL.performed -= instance.OnTriggerL;
            @TriggerL.canceled -= instance.OnTriggerL;
            @BumperR.started -= instance.OnBumperR;
            @BumperR.performed -= instance.OnBumperR;
            @BumperR.canceled -= instance.OnBumperR;
            @BumperR1.started -= instance.OnBumperR1;
            @BumperR1.performed -= instance.OnBumperR1;
            @BumperR1.canceled -= instance.OnBumperR1;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
        }

        public void RemoveCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllerActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllerActions @Controller => new ControllerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IControllerActions
    {
        void OnStickL(InputAction.CallbackContext context);
        void OnStickLClick(InputAction.CallbackContext context);
        void OnStickR(InputAction.CallbackContext context);
        void OnStickRClick(InputAction.CallbackContext context);
        void OnFaceL(InputAction.CallbackContext context);
        void OnFaceR(InputAction.CallbackContext context);
        void OnFaceU(InputAction.CallbackContext context);
        void OnFaceD(InputAction.CallbackContext context);
        void OnDPadL(InputAction.CallbackContext context);
        void OnDPadR(InputAction.CallbackContext context);
        void OnDPadU(InputAction.CallbackContext context);
        void OnDPadD(InputAction.CallbackContext context);
        void OnBumperL(InputAction.CallbackContext context);
        void OnTriggerL(InputAction.CallbackContext context);
        void OnBumperR(InputAction.CallbackContext context);
        void OnBumperR1(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
